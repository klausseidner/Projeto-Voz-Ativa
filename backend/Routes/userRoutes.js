///////////////////////////////////////////////////////////////////////////////////////////////////////
// Arquivo de rotas do usuário
///////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////
// Importando dependências necessárias
///////////////////////////////////////////////////////////////////////////////////////////////////////
const express = require('express'); // Framework Express
const { registerUser, updateProfile, loginUser, getAllUsers, deleteUser } = require('../controllers/userController'); // Importando os controllers
const authMiddleware = require('../middlewares/authMiddleware'); // Importando o middleware de autenticação
const router = express.Router(); // Criando um router para as rotas

///////////////////////////////////////////////////////////////////////////////////////////////////////
// Definindo as rotas
///////////////////////////////////////////////////////////////////////////////////////////////////////
router.post('/register', registerUser); // Rota para registrar um novo usuário
router.put('/:id', authMiddleware.verifyToken, updateProfile); // Usando verifyToken
router.post('/login', loginUser); // Rota para fazer login
router.get('/', authMiddleware.verifyToken, getAllUsers); // Usando verifyToken
router.delete('/:id', authMiddleware.verifyToken, deleteUser); // Usando verifyToken

module.exports = router; // Exportando o router das rotas do usuário

///////////////////////////////////////////////////////////////////////////////////////////////////////