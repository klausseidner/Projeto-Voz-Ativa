///////////////////////////////////////////////////////////////////////////////////////////////////////
// Arquivo responsável pelos logs do sistema
///////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////
// Importando dependências necessárias
///////////////////////////////////////////////////////////////////////////////////////////////////////
const fs = require('fs');  // Biblioteca para manipulação de arquivos
const path = require('path'); // Biblioteca para manipulação de caminhos
const logFilePath = path.join(__dirname, 'logs', 'app.log'); // Define o caminho do arquivo de log

///////////////////////////////////////////////////////////////////////////////////////////////////////
// Função para escrever logs
///////////////////////////////////////////////////////////////////////////////////////////////////////
const log = (message) => { 
    const timestamp = new Date().toISOString(); // Obtém a data e hora atual
    const logMessage = `${timestamp} - ${message}\n`; // Monta a mensagem com a data e hora
    const logsDirectory = path.join(__dirname, 'logs'); // Define o caminho da pasta de logs
    // Cria a pasta 'logs' se não existir e se ela não é um arquivo (para evitar erros de escrita)
    if (!fs.existsSync(logsDirectory)) {
        fs.mkdirSync(logsDirectory); // Cria a pasta
    }

    // Grava a mensagem no arquivo
    fs.appendFile(logFilePath, logMessage, (err) => {
        if (err) {
            console.error('Erro ao gravar no arquivo de log: ', err); // Imprime o erro caso ocorra
        }
    });
};

///////////////////////////////////////////////////////////////////////////////////////////////////////

module.exports = { log }; // Exporta a função de log

///////////////////////////////////////////////////////////////////////////////////////////////////////